<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CMSC423: Bioinformatic Algorithms Databases and Tools (Spring 2017)</title>
    <link>http://www.hcbravo.org/cmsc423/index.xml</link>
    <description>Recent content on CMSC423: Bioinformatic Algorithms Databases and Tools (Spring 2017)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license</copyright>
    <lastBuildDate>Tue, 07 Feb 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.hcbravo.org/cmsc423/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Project 1: Finding origin of DNA replication in a bacterial genome</title>
      <link>http://www.hcbravo.org/cmsc423/projects/project_1/</link>
      <pubDate>Tue, 07 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.hcbravo.org/cmsc423/projects/project_1/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Due: Monday Feb. 20, 2017&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;Posted: Feb 9, 2017&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;Last Update: Feb 9, 2017&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;part-1-programming-exercises&#34;&gt;Part 1: Programming Exercises&lt;/h1&gt;

&lt;p&gt;Submit your answers to Problems 1-3 in the
&lt;a href=&#34;http://rosalind.info/classes/401/&#34;&gt;Rosalind final submission page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE: THESE PROGRAMS NEED TO BE SUBMITTED TO ROSALIND BY Monday 02/20 at 11:59PM&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Question 1. (10pts)&lt;/strong&gt; For each of the 3 solutions submitted provide a
runtime analysis of your solution.
For full credit, include a short description of your algorithm and
show how you derive your answer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Grading (45 pts)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Each of the 3 Rosalind exercises will be evaluated based on correctness, efficiency and style.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Correctness: if you pass the Rosalind correctness check, you get full credit. Otherwise, your grade is determined by&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Program running without error when called as &lt;code&gt;python &amp;lt;script.py&amp;gt; &amp;lt;input_file&amp;gt;&lt;/code&gt; where &lt;code&gt;&amp;lt;input_file&amp;gt;&lt;/code&gt; is in the format used for that problem in Rosalind.&lt;/li&gt;
&lt;li&gt;Program reading input in the required format.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Program printing output in correct format as described in Rosalind.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Program implementing an algorithm that addresses the problem (i.e., you get more points if the algorithm is correct but you have a bug, e.g., with indexing)&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Efficiency: points are awarded for providing efficient solutions. For example, a linear algorithm will score better than a quadratic algorithm. For full credit, implement the efficient algorithms described in textbook and discussed in class.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Is the code in your submission clean and easy to read, with non-obvious statements
properly commented? Are functions used appropriately for clarity and organization?&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;part-2-skew-diagrams&#34;&gt;Part 2: Skew Diagrams&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Campylobacter jejuni&lt;/em&gt; is a well-known bacterial pathogen, recently
 found
 &lt;a href=&#34;http://genomebiology.com/2014/15/6/R76&#34;&gt;to be associated with childhood dysentery&lt;/a&gt;
 in developing countries. Here, you will apply your new skills in a
 preliminary analysis of the genome of this pathogen.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1. (5 pts)&lt;/strong&gt; Use the &lt;code&gt;BioPython&lt;/code&gt; library to download the &lt;em&gt;Campylobacter
  jejuni&lt;/em&gt; genome from NCBI:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;from Bio import Entrez, SeqIO
Entrez.email = &amp;quot;me@example.com&amp;quot;
campy_id = &amp;quot;AL111168.1&amp;quot;

# open an url handle for query
handle = Entrez.efetch(db=&amp;quot;nucleotide&amp;quot;, id=campy_id, rettype=&amp;quot;gb&amp;quot;, retmode=&amp;quot;text&amp;quot;)

# read query result records
record = SeqIO.read(handle, &amp;quot;genbank&amp;quot;)
handle.close()

# write sequence to fasta file (so you don&#39;t have to request again)
SeqIO.write(record, &amp;quot;campy.fa&amp;quot;, &amp;quot;fasta&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Variable &lt;code&gt;record&lt;/code&gt; is a &lt;code&gt;SeqIO&lt;/code&gt; object containing the &lt;em&gt;Campylobacter
jejuni&lt;/em&gt; genome. Check
&lt;a href=&#34;http://biopython.org/DIST/docs/tutorial/Tutorial.html&#34;&gt;Chapter 2 of the Biopython tutorial&lt;/a&gt;
again to see how these objects work.
Also see Chapter 9 of the tutorial for more info on how to obtain DNA
sequences from NCBI.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2. (15 pts)&lt;/strong&gt; Write a script to plot the skew diagram for
  &lt;em&gt;Campylobacter jejuni&lt;/em&gt;. One easy way of plotting is using pylab and IPython. If you start IPython as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ipython
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and &lt;code&gt;skew&lt;/code&gt; is the skew vector you computed for &lt;em&gt;Campylobacter jejuni&lt;/em&gt;
you can plot with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;%pylab
plot(skew)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Question 2 (10 pts)&lt;/strong&gt; Does this skew diagram look like the ones you&amp;rsquo;ve seen
so far in book and discussion? What do you think may account for any
differences? Where do you think replication origin for
  &lt;em&gt;Campylobacter jejuni&lt;/em&gt; is located?&lt;/p&gt;

&lt;p&gt;Save your skew diagram &lt;code&gt;pdf&lt;/code&gt; or other image file and include in your submission (see below).&lt;/p&gt;

&lt;h1 id=&#34;part-3-dnaa-boxes&#34;&gt;Part 3: DnaA boxes&lt;/h1&gt;

&lt;p&gt;Use your code to find most frequent words with mismatches (at most d=2 mismatches) and reverse complements to find candidate DnaA binding sequences in the oriC candidate region you found above (250bp on each side of position minimizing skew).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Question 3 (10 pts)&lt;/strong&gt; Construct a table that shows for each k=3,4,5,6,7,8,9:&lt;br /&gt;
(a) the number of distinct frequent words, and&lt;br /&gt;
(b) the number of times each frequent word occurs in the genomic region.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Question 4 (5 pts)&lt;/strong&gt; Based on your result, did you find a reasonable candidate DnaA sequence you would provide to a biologist to test. If so, write down the candidate sequence and explain why you chose this particular candidate sequence. If not, explain why not.&lt;/p&gt;

&lt;h1 id=&#34;how-to-submit&#34;&gt;How to submit&lt;/h1&gt;

&lt;p&gt;Prepare a writeup answering the four questions above and save as &lt;code&gt;pdf&lt;/code&gt;. Submit any additional code (besides your solutions to the Rosalind exercises) used for this part of the homework. I highly recommend working with a &lt;code&gt;Jupyter&lt;/code&gt; notebook, exporting the notebook as &lt;code&gt;pdf&lt;/code&gt; and submitting that.&lt;/p&gt;

&lt;p&gt;Submit to ELMS by Monday 02/20 11:59pm here: &lt;a href=&#34;https://myelms.umd.edu/courses/1218381/assignments/4362579&#34;&gt;https://myelms.umd.edu/courses/1218381/assignments/4362579&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CMSC Resources</title>
      <link>http://www.hcbravo.org/cmsc423/resources/howto-biopython/</link>
      <pubDate>Wed, 25 Jan 2017 08:54:37 -0800</pubDate>
      
      <guid>http://www.hcbravo.org/cmsc423/resources/howto-biopython/</guid>
      <description>

&lt;h2 id=&#34;install-biopython&#34;&gt;Install Biopython&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Download and install &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Python 2.7&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Download and install &lt;a href=&#34;https://www.continuum.io/downloads/&#34;&gt;Anaconda&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Use the following commad to install biopython:&lt;br /&gt;
  &lt;code&gt;conda install -c anaconda biopython=1.68&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Setting up R</title>
      <link>http://www.hcbravo.org/cmsc423/homeworks/rocker/</link>
      <pubDate>Wed, 31 Aug 2016 00:05:51 -0400</pubDate>
      
      <guid>http://www.hcbravo.org/cmsc423/homeworks/rocker/</guid>
      <description>

&lt;p&gt;For class we will be using R, Rstudio and git. You can download and install each using the &lt;a href=&#34;#downloads&#34;&gt;links below&lt;/a&gt;. However, you can instead use &lt;a href=&#34;https://github.com/rocker-org/rocker&#34;&gt;Rocker&lt;/a&gt;, a project built on top of
&lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; to manage your software installation. We&amp;rsquo;ve setup a container that will provide you with a working installation of R, and the Rstudio IDE, along with a lot
of packages providing analysis tools and datasets we will use throughout the semester. You
can read more about Rocker in &lt;a href=&#34;http://dirk.eddelbuettel.com/blog/2014/10/23/&#34;&gt;this introduction&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;downloads&#34;&gt;Downloads&lt;/h1&gt;

&lt;p&gt;If you would rather download and maintain your own software environment, download tools from these links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cran.r-project.org&#34;&gt;R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rstudio.com/wp-signup.php?new=rstudio.wpengine.com&#34;&gt;Rstudio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://help.github.com/articles/set-up-git/&#34;&gt;git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;setting-up-docker&#34;&gt;Setting up Docker&lt;/h1&gt;

&lt;p&gt;These instructions are essentially following &lt;a href=&#34;https://github.com/rocker-org/rocker/wiki/Using-the-RStudio-image&#34;&gt;this document&lt;/a&gt; and have been tested mainly on Mac OSX.
Install &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; according to the instructions &lt;a href=&#34;https://docs.docker.com/installation/&#34;&gt;for your system&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To check that docker works:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run hello-world
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;setting-up-the-course-docker-image&#34;&gt;Setting up the course Docker image&lt;/h1&gt;

&lt;p&gt;We will be working from a docker image that extends the &lt;code&gt;ropensci&lt;/code&gt;
container provided by the &lt;a href=&#34;https://github.com/rocker-org/rocker&#34;&gt;Rocker project&lt;/a&gt;.  It includes a a working installation of R, and the Rstudio IDE, along with many
packages providing analysis tools and datasets we will use throughout the course. You can read more about Rocker in &lt;a href=&#34;http://dirk.eddelbuettel.com/blog/2014/10/23/&#34;&gt;this introduction&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This command will start an instance of this image.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 8787:8787 -v ${PWD}:/home/rstudio --name ids hcorrada/idsdocker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will take a while the first time you download it. After the download &lt;code&gt;Rstudio Server&lt;/code&gt; will start (invisibly).&lt;/p&gt;

&lt;p&gt;A couple of things to note:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;We will use Rstudio server through the web browser. The command &lt;code&gt;-p 8787:8787&lt;/code&gt; tells docker where you&amp;rsquo;re going to point your browser to run it.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Docker runs on a virtual machine, we would like to be able to share files in your local machine with this virtual machine. The &lt;code&gt;-v&lt;/code&gt; flag does that. Here &lt;code&gt;${PWD}&lt;/code&gt; corresponds to the current path in your local machine that will be mapped to the home directory in the docker virtual machine running rstudio (it is good practice to have a dedicated directory in your local machine where you do all work for this class mounted to the Docker container). You can read more about this &lt;a href=&#34;https://github.com/rocker-org/rocker/wiki/Sharing-files-with-host-machine&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;It may also be possible that your personal computer does not, by default, allow the creation of virtual machines. The process of changing this setting is easy to do but will depend on your computer. The general idea is that you want to open your BIOS settings from start-up and change the virtualization setting there. As a general heuristic for doing so is &lt;a href=&#34;https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/5/html/Virtualization/sect-Virtualization-Troubleshooting-Enabling_Intel_VT_and_AMD_V_virtualization_hardware_extensions_in_BIOS.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;We name the instance &lt;code&gt;ids&lt;/code&gt; so we can refer to it in other commands later on.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;starting-rstudio&#34;&gt;Starting Rstudio&lt;/h1&gt;

&lt;p&gt;You will use Rstudio through your web browser. First, you need to know what is the address of your virtual machine. Users of &lt;code&gt;Docker for Mac&lt;/code&gt; and &lt;code&gt;Docker for Windows&lt;/code&gt; should be able to use the localhost address (&lt;code&gt;http://127.0.0.1:8787&lt;/code&gt;). In other cases, you can find the address of the virtual machine by typing this in a terminal window:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-machine ip default
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If, for example, this returned &lt;code&gt;192.168.59.103&lt;/code&gt; then we can open Rstudio by pointing our web browser to &lt;code&gt;http://192.168.59.103:8787&lt;/code&gt; (remember we used port &lt;code&gt;8787&lt;/code&gt; when we started the image).&lt;/p&gt;

&lt;p&gt;Sign-in with username &lt;code&gt;rstudio&lt;/code&gt; and password &lt;code&gt;rstudio&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&#34;try-it-out&#34;&gt;Try it out&lt;/h1&gt;

&lt;p&gt;The &lt;code&gt;Rstudio&lt;/code&gt; IDE is divided into multiple panes. R is an interactive environment for data analysis.
An interactive R session runs in the &lt;strong&gt;Console&lt;/strong&gt; pane in Rstudio. You can enter R commands there:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; Sys.Date()
&amp;gt; data(cars)
&amp;gt; View(cars)
&amp;gt; plot(cars$dist, cars$speed)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The last command will make a scatter plot on the &lt;strong&gt;Plots&lt;/strong&gt; pane.&lt;/p&gt;

&lt;h1 id=&#34;stopping-the-container&#34;&gt;Stopping the container&lt;/h1&gt;

&lt;p&gt;To stop and remove the running docker container, write:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker stop ids
docker rm ids
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;updating-the-image&#34;&gt;Updating the image&lt;/h1&gt;

&lt;p&gt;When the image is updated to include new data or software you can use the following commands to pull the updated image and restart the docker container:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# pull updated version of image
docker pull hcorrada/idsdocker

# stop and remove the running container
docker stop ids
docker rm ids

# now restart the docker container with the updated image
docker run -d -p 8787:8787 -v ${PWD}:/home/rstudio --name ids hcorrada/idsdocker
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;dockerfile&#34;&gt;Dockerfile&lt;/h1&gt;

&lt;p&gt;The Dockerfile defining the class image is hosted on Github here: &lt;a href=&#34;https://github.com/hcorrada/idsDocker&#34;&gt;https://github.com/hcorrada/idsDocker&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;permissions&#34;&gt;Permissions&lt;/h1&gt;

&lt;p&gt;Advanced Note: you don&amp;rsquo;t need to use &lt;code&gt;sudo&lt;/code&gt; on Mac OSX. Linux users might want to add their user to the docker group to avoid having to use sudo. To do so, just run&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo usermod -a -G docker &amp;lt;username&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You may need to login again to refresh your group membership.&lt;/p&gt;

&lt;h1 id=&#34;git&#34;&gt;Git&lt;/h1&gt;

&lt;p&gt;The course docker image also includes &lt;code&gt;git&lt;/code&gt; a &lt;em&gt;version control&lt;/em&gt; program we will use during the course. You will download &lt;em&gt;all&lt;/em&gt; course materials using &lt;code&gt;git&lt;/code&gt; and be able to update any changes I make along the way.&lt;/p&gt;

&lt;p&gt;Version control will also be useful for reproducibility of your data analyses, also for sharing your analyses and contributing with collaborators.&lt;/p&gt;

&lt;p&gt;To get started we will create a new Rstudio project by clicking on &lt;code&gt;File-&amp;gt;New Project...&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and selecting &lt;code&gt;Version Control&lt;/code&gt; to build the project from our course materials.&lt;/p&gt;

&lt;p&gt;Select &lt;code&gt;Git&lt;/code&gt; and enter the course repositories URL:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/hcorrada/IntroDataSci.git&#34;&gt;https://github.com/hcorrada/IntroDataSci.git&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will download all the course materials to your current directory.&lt;/p&gt;

&lt;p&gt;One more thing: we are using the &lt;code&gt;gh-pages&lt;/code&gt; branch to keep track of our materials. Go to the &lt;code&gt;Git&lt;/code&gt; tab on Rstudio and on the branch dropdown (it should show &lt;code&gt;master&lt;/code&gt; at first), select &lt;code&gt;origin/gh-pages&lt;/code&gt;. Ok, now we&amp;rsquo;re done.&lt;/p&gt;

&lt;p&gt;We will later see more information on how to use &lt;code&gt;git&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&#34;getting-and-aws-ec2-instance-up-and-running&#34;&gt;Getting and AWS EC2 instance up and running&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://aws.amazon.com&#34;&gt;AWS (Amazon Web Services)&lt;/a&gt; provides Elastic Compute Cloud (EC2) as a service that allows users to perform cloud computing (for a cost) without the cost of setting up the actual hardware necessary. For any of you familiar with MapReduce or Spark, EC2 instances are the way Amazon facilitates users interaction with those big data processing environments.&lt;/p&gt;

&lt;p&gt;Without further ado, here are the instructions:&lt;/p&gt;

&lt;h3 id=&#34;important-you-will-need-to-do-this-before-anything-else&#34;&gt;IMPORTANT; YOU WILL NEED TO DO THIS BEFORE ANYTHING ELSE:&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Go to &lt;a href=&#34;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/get-set-up-for-amazon-ec2.html#sign-up-for-aws&#34;&gt;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/get-set-up-for-amazon-ec2.html#sign-up-for-aws&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Create an AWS account. In order to do this you will need to provide a phone number and a credit card. The phone number will be used to get a pin number and the credit card will receive a $1 charge that will be removed. While the accounts we will be setting up are free, Amazon charges for these products and will charge your account if you go over the 750 hour limit they provide. You can set up usage alarms at &lt;a href=&#34;http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/free-tier-alarms.html&#34;&gt;http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/free-tier-alarms.html&lt;/a&gt; in order to avoid going over your limit and being charged.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Create and IAM user and follow the instructions for creating a group for administrators.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Create a key pair and be sure to keep your private key somewhere safe. Something you may need to do is change the permissions on the private key (for those of you using linux this would be &lt;code&gt;chmod 400 name_of_the_private_key.pem)&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;once-you-ve-created-a-an-account-and-an-iam-user-follow-these-instructions&#34;&gt;ONCE YOU&amp;rsquo;VE CREATED A AN ACCOUNT AND AN IAM USER FOLLOW THESE INSTRUCTIONS:&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Sign into your AWS account and configure a t2.micro instance for launch.  When choosing the AMI, note that these instructions cover Rocker setup for Amazon Linux AMI and Ubuntu Server 14.04 AMI. REQUIRED: While configuring your EC2 instance for launch, add these inbound rules for the security group you selected:&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;Type: &amp;ldquo;SSH&amp;rdquo;, Protocol: TCP, Port Range: 22, Source: my address (this will need to be updated when your local machine ip address changes)&lt;/li&gt;
&lt;li&gt;Type: &amp;ldquo;SSH&amp;rdquo;: &amp;ldquo;custom TCP rule&amp;rdquo;, Protocol: TCP, port 8787, Source: my address (this will need to be updated when your local machine ip address changes)&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;Connect to your EC2 instance.  The EC2 Management Console provides the user name, host name, and SSH command after right clicking on an instance and choosing &amp;ldquo;Connect&amp;rdquo;. The easiest way to ssh into your EC2 instance is in docker. From docker run the command &lt;code&gt;ssh -i &amp;quot;name_of_EC2_instance&amp;quot; ec2-user@ec2-54-209-79-237.compute-1.amazonaws.com&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If using an Amazon Linux AMI, install Docker as follows: &lt;a href=&#34;http://docs.aws.amazon.com/AmazonECS/latest/developerguide/docker-basics.html#install_docker&#34;&gt;http://docs.aws.amazon.com/AmazonECS/latest/developerguide/docker-basics.html#install_docker&lt;/a&gt; . If using an Ubuntu Server 14.04 AMI, install docker as follows starting with the &amp;ldquo;Install&amp;rdquo; heading (Half way down the page): &lt;a href=&#34;https://docs.docker.com/engine/installation/linux/ubuntulinux/&#34;&gt;https://docs.docker.com/engine/installation/linux/ubuntulinux/&lt;/a&gt;. IMPORTANT: the above OS refers to the OS of the AMI.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Run:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 8787:8787 -v ${PWD}:/home/rstudio --name ids hcorrada/idsdocker
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;to-start-rstudio&#34;&gt;To start Rstudio&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Determine your EC2 instance public ip address.  This is accessible from the EC2 Management Console.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;On your local machine, point your browser to &lt;code&gt;http://&amp;lt;ec2 instance public ip address&amp;gt;:8787&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Sign-in with username rstudio and password rstudio. Continue with &lt;a href=&#34;#try-it-out&#34;&gt;Try it out&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>CMSC423 Calendar</title>
      <link>http://www.hcbravo.org/cmsc423/calendar/</link>
      <pubDate>Tue, 30 Aug 2016 10:13:51 -0400</pubDate>
      
      <guid>http://www.hcbravo.org/cmsc423/calendar/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CMSC423 Projects</title>
      <link>http://www.hcbravo.org/cmsc423/projects/</link>
      <pubDate>Mon, 29 Aug 2016 08:54:44 -0400</pubDate>
      
      <guid>http://www.hcbravo.org/cmsc423/projects/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Project 1: &lt;a href=&#34;project_1/&#34;&gt;Finding the origin of DNA replication in a bacterial genome&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>CMSC Resources</title>
      <link>http://www.hcbravo.org/cmsc423/resources/</link>
      <pubDate>Mon, 29 Aug 2016 08:54:37 -0400</pubDate>
      
      <guid>http://www.hcbravo.org/cmsc423/resources/</guid>
      <description>

&lt;h2 id=&#34;python&#34;&gt;Python&lt;/h2&gt;

&lt;p&gt;We will be using &lt;a href=&#34;http://www.python.org/&#34;&gt;Python&lt;/a&gt; for all programming projects. Here are some resources
to get you started:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.umiacs.umd.edu/~hal/courses/2011F_ML/p0/&#34;&gt;Short tutorial by Hal Daume&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.python.org/tutorial/&#34;&gt;Python Tutorial&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.python.org/index.html&#34;&gt;Python Docs&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://scipy.org/Tentative_NumPy_Tutorial&#34;&gt;Numpy Tutorial (tentative)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.scipy.org/doc/numpy/user/&#34;&gt;Numpy User&amp;rsquo;s Guide&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.scipy.org/doc/&#34;&gt;Scipy docs&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ipython.org/ipython-doc/stable/index.html&#34;&gt;IPython docs&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jupyter.org/&#34;&gt;Jupyter notebooks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;other-resources&#34;&gt;Other Resources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;To install &lt;a href=&#34;howto-biopython/index.html&#34;&gt;Bipython&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cbcb.umd.edu/~carlk/bioinfo-lectures/&#34;&gt;Carl Kingsford&amp;rsquo;s lecture slides&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;R/Bioconductor: &lt;a href=&#34;http://www.r-project.org&#34;&gt;R&lt;/a&gt; is an open-source environment for data analysis. The &lt;a href=&#34;http://bioconductor.org&#34;&gt;Bioconductor project&lt;/a&gt; provides a
large number of useful libraries for high-throughput genomic data analysis. &lt;a href=&#34;http://www.bioconductor.org/packages/release/BiocViews.html&#34;&gt;You can browse them by task&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;R/Python references: &lt;a href=&#34;http://mathesaurus.sourceforge.net/r-numpy.html&#34;&gt;A short R guide for Python users.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.nature.com/scitable&#34;&gt;Scitable&lt;/a&gt; is an excellent resource provided by the journal &lt;em&gt;Nature&lt;/em&gt; providing introductory reading material on most of the topics in biology/genetics/medicine we
discuss in class.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.openintro.org/stat/online.php&#34;&gt;Diez, Barr and Cetinkaya-Rundel. OpenIntro Statistics. 2011&lt;/a&gt; A good introductory Statistics textbook. &lt;a href=&#34;http://www.openintro.org/stat/downloads.php&#34;&gt;You can download it here.&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.youtube.com/user/RafalabChannel?feature=watch&#34;&gt;Rafael Irizarry&amp;rsquo;s lecture videos&lt;/a&gt; are good to watch.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Logistics</title>
      <link>http://www.hcbravo.org/cmsc423/logistics/</link>
      <pubDate>Mon, 29 Aug 2016 05:41:03 -0400</pubDate>
      
      <guid>http://www.hcbravo.org/cmsc423/logistics/</guid>
      <description>

&lt;p&gt;This page constitutes the official syllabus for this class.&lt;/p&gt;

&lt;h2 id=&#34;course-information&#34;&gt;Course Information&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Bioinformatic tools, algorithms and databases&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;CMSC423 Spring 2017&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Lecture Meeting Times&lt;br /&gt;
Tuesday and Thursday, 9:30pm-10:45pm, CSI 1122&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Instructor:&lt;br /&gt;
&lt;a href=&#34;http://www.cbcb.umd.edu/~hcorrada&#34;&gt;H&amp;eacute;ctor Corrada Bravo&lt;/a&gt;&lt;br /&gt;
Center for Bioinformatics and Computational Biology&lt;br /&gt;
Department of Computer Science&lt;br /&gt;
&lt;a href=&#34;mailto:hcorrada@umiacs.umd.edu&#34;&gt;hcorrada@umiacs.umd.edu&lt;/a&gt;&lt;br /&gt;
Office: 3114F Biomolecular Sciences Building&lt;br /&gt;
Phone Number: 301-405-2481&lt;br /&gt;
&lt;strong&gt;Office Hours:&lt;/strong&gt; Friday 1:00pm-2:00pm AVW 3223 and by appointment&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Communication:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For course related questions, use &lt;a href=&#34;https://piazza.com/class/iybyz4l8fqs2bl
&#34;&gt;Piazza&lt;/a&gt; as indicated below.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;For any other communication (e.g., absences accomodations etc.) email me including &lt;code&gt;[CMSC423]&lt;/code&gt; in the message subject.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;TA:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Aya Ismail
&lt;a href=&#34;mailto:asalam@umd.edu&#34;&gt;asalam@umd.edu&lt;/a&gt;&lt;br /&gt;
Office Hours: Tuesdays and Thursdays 1:15-3:15 AVW 4101&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will use the class Piazza site &lt;a href=&#34;https://piazza.com/class/iybyz4l8fqs2bl
&#34;&gt;https://piazza.com/class/iybyz4l8fqs2bl
&lt;/a&gt; for questions, discussion and announcements. Assignments and grades for the class will be posted to the class ELMS site: &lt;a href=&#34;https://myelms.umd.edu/courses/1218381
&#34;&gt;https://myelms.umd.edu/courses/1218381
&lt;/a&gt;.
In case of an extended emergency closure, announcements on policy and procedures will be posted to Piazza.&lt;/p&gt;

&lt;h2 id=&#34;textbook-and-resources&#34;&gt;Textbook and Resources:&lt;/h2&gt;

&lt;p&gt;We will be using &lt;a href=&#34;http://bioinformaticsalgorithms.com/
&#34;&gt;Compeau, P. and Pevsner, P., Bioinformatics Algorithms, An Active Learning Approach, 2nd. edition, Vols. 1 and 2. Active Learning Publishers, La Jolla, CA, 2015.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This text book is accompanied by a set of video lectures that you can view in preparation for class discussion during class meeting times. &lt;a href=&#34;https://www.youtube.com/user/bioinfalgorithms/playlists
&#34;&gt;Video playlists are available on youtube&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Class meeting times will (for the most part) not be lecture time&lt;/strong&gt;. The goal is to use class time to explore Biological and Algorithmic aspects of materials in depth and collaboratively with your peers.&lt;/p&gt;

&lt;p&gt;Programming exercises and problems are integrated with the
    textbook readings and videos. We will use the
    &lt;a href=&#34;http://rosalind.info&#34;&gt;Rosalind Project&lt;/a&gt; to manage programming
    exercises and submissions. More information below.&lt;/p&gt;

&lt;h2 id=&#34;expected-outcomes-and-topics-covered&#34;&gt;Expected outcomes and topics covered&lt;/h2&gt;

&lt;p&gt;At the end of this course, students will be able to describe,
implement and analyze algorithms that solve fundamental problems in
biological sequence analysis: sequence alignment and assembly, string
querying, sequence signal finding, and data clustering. They will also be able to identify and use appropriate publicly available resources, both data and tools, to perform common bioinformatics tasks.&lt;/p&gt;

&lt;h2 id=&#34;expectations-for-students&#34;&gt;Expectations for Students&lt;/h2&gt;

&lt;h3 id=&#34;class-prep&#34;&gt;Class prep&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;http://www.hcbravo.org/cmsc423/
/calendar/index.html&#34;&gt;Course Calendar&lt;/a&gt; will list
readings (usually from &lt;a href=&#34;http://bioinformaticsalgorithms.com/
&#34;&gt;the textbook&lt;/a&gt;, on
occassion uploaded to &lt;a href=&#34;https://myelms.umd.edu/courses/1218381
&#34;&gt;ELMS&lt;/a&gt;). &lt;strong&gt;You are
required to read this material before lecture&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;http://www.hcbravo.org/cmsc423/
/calendar/index.html&#34;&gt;Course Calendar&lt;/a&gt; will also
list programming exercises to &lt;strong&gt;attempt&lt;/strong&gt; before lecture. You
will upload attempted solutions to the &lt;a href=&#34;http://rosalind.info/classes/400/
&#34;&gt;pre-lecture exercise
Rosalind page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;http://www.hcbravo.org/cmsc423/
/calendar/index.html&#34;&gt;Course Calendar&lt;/a&gt; will list
any quizzes or written assignments to be completed before lecture. You
must submit these assignments &lt;strong&gt;before lecture&lt;/strong&gt; as instructed.&lt;/p&gt;

&lt;h3 id=&#34;programming-projects&#34;&gt;Programming projects&lt;/h3&gt;

&lt;p&gt;Programming exercises on the &lt;a href=&#34;http://rosalind.info/classes/401/
&#34;&gt;final submission
Rosalind page&lt;/a&gt; will be collected into
&lt;em&gt;programming projects&lt;/em&gt;. Some additional analysis using the programs
you write for these exercises will be assigned. Those additional
analysis will be submitted as instructed. Full descriptions of the
programming projects will be posted in the
&lt;a href=&#34;http://www.hcbravo.org/cmsc423/
/projects/index.html&#34;&gt;Programming Projects course
page&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;python&#34;&gt;Python&lt;/h3&gt;

&lt;p&gt;We require that you use Python 2.7 for all programming assignments. Please
see &lt;a href=&#34;http://www.hcbravo.org/cmsc423/
/resources/howto-biopython/index.html&#34;&gt;this guide to installing BioPython&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;written-assignments&#34;&gt;Written assignments&lt;/h3&gt;

&lt;p&gt;Some written exercises will be assigned covering material we
have discussed in class. Some of these will be posted on the
&lt;a href=&#34;http://www.hcbravo.org/cmsc423/
/calendar/index.html&#34;&gt;Course Calendar&lt;/a&gt; and announced on
the class &lt;a href=&#34;https://piazza.com/class/iybyz4l8fqs2bl
&#34;&gt;Piazza page&lt;/a&gt;. Other in-class exercises
may not be announced ahead of time. See below
for class policies on attendance.&lt;/p&gt;

&lt;h3 id=&#34;announcements-and-discussion&#34;&gt;Announcements and discussion&lt;/h3&gt;

&lt;p&gt;We will use the &lt;a href=&#34;https://piazza.com/class/iybyz4l8fqs2bl
&#34;&gt;Piazza page&lt;/a&gt; for class
announcements. Please use the &lt;a href=&#34;https://piazza.com/class/iybyz4l8fqs2bl
&#34;&gt;Piazza page&lt;/a&gt; for
class discussion. Note that the Rosalind Project class pages also have
discussion capability. &lt;strong&gt;Do not use it&lt;/strong&gt;, please use the
&lt;a href=&#34;{{ site.piazza_url }}&#34;&gt;Piazza page&lt;/a&gt; for &lt;em&gt;all discussion&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&#34;participation-grade&#34;&gt;Participation grade&lt;/h3&gt;

&lt;p&gt;The course grading scheme (see below) includes a class participation grade. You can earn full credit for this in three ways: (1) lecture participation, asking questions and answering your peers questions, (2) piazza participation, asking and answering questions on piazza, (3) regular attendance to office hours. To earn full credit you should aim to ask or answer a question at least once every two weeks on lecture or on piazza; or attend office hours at least once a month (that can include just going to my office hours to chat about computer science, biology, science, etc.)&lt;/p&gt;

&lt;h3 id=&#34;other-policies&#34;&gt;Other policies&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;There will be reading assignments. Students are expected to have read the material &lt;strong&gt;before&lt;/strong&gt; class.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Students are expected to attend lectures. Active participation is expected. There will be graded work done in class.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Assignments are to be handed-in electronically or in class as instructed on their due date. Late assignments will not be accepted.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;There will be graded work to be done in class. Students not in class that day, except for an excused absence, will not be able to complete that work outside class.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Students may discuss homeworks and projects in groups. However, each
student must write and/or program solutions independently.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Posting project solutions in a public online location without
express consent and permission from the instructor is a violation of
academic integrity policy.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Cell phone usage is &lt;strong&gt;prohibited&lt;/strong&gt; during lecture, laptop use will be allowed to the extent that students &lt;strong&gt;demonstrably&lt;/strong&gt; use it to follow along an in-class analysis or demonstration.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;grading-procedures&#34;&gt;Grading Procedures&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Lecture prep work (15%): to be done before class, includes programming exercises and short written assignments.&lt;/li&gt;
&lt;li&gt;Written homework (15%): some will be take-home, some will be done in class.&lt;/li&gt;
&lt;li&gt;Programming projects (25%)&lt;/li&gt;
&lt;li&gt;Midterms (2) (20%)&lt;/li&gt;
&lt;li&gt;Final (20%)&lt;/li&gt;
&lt;li&gt;Class participation (5%)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;university-policies-and-resources&#34;&gt;University Policies and Resources&lt;/h2&gt;

&lt;p&gt;Policies relevant to Undergraduate Courses are found here: &lt;a href=&#34;http://ugst.umd.edu/courserelatedpolicies.html&#34;&gt;http://ugst.umd.edu/courserelatedpolicies.html&lt;/a&gt;. Topics that are addressed in these various policies include academic integrity, student and instructor conduct, accessibility and accommodations, attendance and excused absences, grades and appeals, copyright and intellectual property.&lt;/p&gt;

&lt;h2 id=&#34;course-evaluations&#34;&gt;Course evaluations&lt;/h2&gt;

&lt;p&gt;Course evaluations are important and that the department and faculty
take student feedback seriously.  Students can go to &lt;a href=&#34;http://www.courseevalum.umd.edu&#34;&gt;http://www.courseevalum.umd.edu&lt;/a&gt; to complete their evaluations.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CMSC423: Bioinformatic Algorithms, Databases and Tools</title>
      <link>http://www.hcbravo.org/cmsc423/</link>
      <pubDate>Sun, 28 Aug 2016 17:13:09 -0400</pubDate>
      
      <guid>http://www.hcbravo.org/cmsc423/</guid>
      <description>

&lt;h2 id=&#34;course-information&#34;&gt;Course Information&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;CMSC423: Bioinformatic Algorithms, Databases and Tools&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;Spring 2017&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Instructor:&lt;br /&gt;
&lt;a href=&#34;http://www.cbcb.umd.edu/~hcorrada&#34;&gt;H&amp;eacute;ctor Corrada Bravo&lt;/a&gt;&lt;br /&gt;
Center for Bioinformatics and Computational Biology&lt;br /&gt;
Department of Computer Science&lt;br /&gt;
&lt;a href=&#34;mailto:hcorrada@umiacs.umd.edu&#34;&gt;hcorrada@umiacs.umd.edu&lt;/a&gt;&lt;br /&gt;
Office: &lt;a href=&#34;https://www.cbcb.umd.edu/about-us/directions&#34;&gt;3114F Biomolecular Sciences Building&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Lecture Meeting Times&lt;br /&gt;
Tuesday and Thursday, 9:30am-10:45am, CSI 1122&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;

&lt;p&gt;Check the &lt;a href=&#34;calendar/&#34;&gt;calendar page&lt;/a&gt; for up-to-date course calendar.&lt;br /&gt;
Check the &lt;a href=&#34;logistics/&#34;&gt;logistics page&lt;/a&gt; for more information, including the official syllabus.&lt;br /&gt;
Grades and assignments posted in &lt;a href=&#34;https://myelms.umd.edu/courses/1218381
&#34;&gt;ELMS&lt;/a&gt;.&lt;br /&gt;
Discussion and questions in &lt;a href=&#34;https://piazza.com/class/iybyz4l8fqs2bl
&#34;&gt;Piazza&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>